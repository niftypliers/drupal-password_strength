<?php
// $Id$

function password_strength_init() {
  drupal_add_js(drupal_get_path('module', 'password_strength'). '/password_strength.js');
  drupal_add_css(drupal_get_path('module', 'password_strength'). '/password_strength.css');
}



/**
* Implementation of hook_menu().
*/
function password_strength_menu($may_cache) {
  global $user;
  $items = array();

  if ($may_cache) { 
    
    $items[] = array(
  		'path' => 'admin/settings/password_strength', 
  		'title' => t('Password Strength'),
  		'callback' => 'drupal_get_form', 
  		'callback arguments' => array('password_strength_admin_settings'),
  		'access' => user_access('configure password strength'),
  	);
  }
  return $items;
}



function password_strength_admin_settings() {
  $form['demo_confirm'] = array(
    '#type' => 'fieldset',
    '#title' => t('Demo: Password with confirmation'),
  );
  $form['demo_confirm']['pass_confirm'] = array(
    '#type' => 'password_confirm',
    '#required' => true,
  );
  
  
  return $form;
}




/**
 * Add the necessary classes, and validation to password_confirm elements
 */
function password_strength_expand_password_confirm($element) {
  $element = expand_password_confirm($element);
  $element['pass1']['#attributes'] = array('class' => 'password-field');
  $element['pass2']['#attributes'] = array('class' => 'password-confirm');
  $element['#validate']['password_strength_confirm_validate'] = array();
  return $element;
}




/**
 * Implementation of hook_elements
 */
function password_strength_elements() {
  // Override the default password_confirm processor
  $type['password_confirm'] = array('#input' => TRUE, '#process' => array('password_strength_expand_password_confirm' => array()));
  return $type;
}




/**
 * @todo Validate password_confirm element strength using algorithm similar to JS algorithm
 */
function password_strength_confirm_validate($form) {
  return $form;
}